# Default dependencies registry
# This file contains built-in dependency definitions that can be overridden
# by user's local deps.yaml
# envsubst
# powershell
#firebase-cli
# supabase
# vercel CLI
# netlify CLI
# gh

dependencies: {}
registry:
    helm:
        name: helm
        repo: helm/helm
        url_template: https://get.helm.sh/{{.asset}}
        asset_patterns:
            darwin-amd64: helm-{{.tag}}-darwin-amd64.tar.gz
            darwin-arm64: helm-{{.tag}}-darwin-arm64.tar.gz
            linux-amd64: helm-{{.tag}}-linux-amd64.tar.gz
            linux-arm64: helm-{{.tag}}-linux-arm64.tar.gz
            windows-amd64: helm-{{.tag}}-windows-amd64.zip
        checksum_file: https://get.helm.sh/helm-{{.tag}}-{{.os}}-{{.arch}}.tar.gz.sha256sum
        version_command: version --short
        version_pattern: v(\d+\.\d+\.\d+)
    jq:
        name: jq
        repo: jqlang/jq
        asset_patterns:
            darwin-amd64: jq-macos-amd64
            darwin-arm64: jq-macos-arm64
            linux-amd64: jq-linux-amd64
            linux-arm64: jq-linux-arm64
            windows-amd64: jq-win64.exe
        version_command: --version
        version_pattern: jq-(\d+\.\d+)
    kubectl:
        name: kubectl
        repo: kubernetes/kubernetes
        url_template: https://dl.k8s.io/release/{{.tag}}/bin/{{.os}}/{{.arch}}/kubectl
        version_command: version --client
        version_pattern: Client Version:\s*v?(\d+\.\d+\.\d+)

    sqlcmd:
        name: sqlcmd
        repo: microsoft/go-sqlcmd
        asset_patterns:
            darwin-amd64: sqlcmd-darwin-amd64.tar.bz2
            darwin-arm64: sqlcmd-darwin-arm64.tar.bz2
            linux-amd64: sqlcmd-linux-amd64.tar.bz2
            linux-arm64: sqlcmd-linux-arm64.tar.bz2
            windows-amd64: sqlcmd-windows-amd64.zip
        binary_name: sqlcmd
        version_command: --version
        version_pattern: Version:\s*v?(\d+\.\d+\.\d+)

    commons-lang3:
        name: commons-lang3
        manager: maven
        extra:
            group_id: org.apache.commons
            artifact_id: commons-lang3
            packaging: jar
            repository: https://repo1.maven.org/maven2
    postgres:
        name: postgres-embedded
        manager: maven
        extra:
            group_id: io.zonky.test.postgres
            artifact_id: embedded-postgres-binaries-{{.os}}-{{if eq .arch "arm64"}}arm64v8{{else}}{{.arch}}{{end}}
            packaging: jar
            repository: https://repo1.maven.org/maven2
        post_process:
            - delete("META-INF")
            - unarchive(glob("*.txz")[0])
            # - move(glob("*:dir")[0], "postgres")
    gomplate:
        repo: hairyhenderson/gomplate
        asset_patterns:
            darwin-amd64: gomplate_darwin-amd64
            darwin-arm64: gomplate_darwin-arm64
            linux-amd64: gomplate_linux-amd64
            linux-arm64: gomplate_linux-arm64
            windows-amd64: gomplate_windows-amd64.exe
    jb:
        name: jb

        repo: jsonnet-bundler/jsonnet-bundler
        asset_patterns:
            darwin-amd64: jb-darwin-amd64
            darwin-arm64: jb-darwin-arm64
            linux-amd64: jb-linux-amd64
            linux-arm64: jb-linux-arm64
            windows-amd64: jb-windows-amd64.exe
    yaml-cli:
        name: yaml-cli

        repo: flanksource/yaml-cli
        asset_patterns:
            darwin-amd64: yaml_darwin-amd64
            darwin-arm64: yaml_darwin-arm64
            linux-amd64: yaml_linux-amd64
            linux-arm64: yaml_linux-arm64
            windows-amd64: yaml_windows-amd64.exe
    kind:
        name: kind

        repo: kubernetes-sigs/kind
        asset_patterns:
            darwin-amd64: kind-darwin-amd64
            darwin-arm64: kind-darwin-arm64
            linux-amd64: kind-linux-amd64
            linux-arm64: kind-linux-arm64
            windows-amd64: kind-windows-amd64
    helmfile:
        name: helmfile

        repo: roboll/helmfile
        asset_patterns:
            darwin-amd64: helmfile_darwin_amd64
            darwin-arm64: helmfile_darwin_arm64
            linux-amd64: helmfile_linux_amd64
            linux-arm64: helmfile_linux_arm64
            windows-amd64: helmfile_windows_amd64.exe

    ketall:
        name: ketall

        repo: corneliusweig/ketall
        asset_patterns:
            darwin-amd64: get-all-amd64-darwin.tar.gz
            darwin-arm64: get-all-arm64-darwin.tar.gz
            linux-amd64: get-all-amd64-linux.tar.gz
            linux-arm64: get-all-arm64-linux.tar.gz
            windows-amd64: get-all-amd64-windows.tar.gz
        binary_name: get-all
    sops:
        name: sops
        repo: getsops/sops
        checksum_file: sops-{{.version}}.checksums.txt
        asset_patterns:
            "*": "sops-{{.tag}}.{{.os}}.{{.arch}}"

    kubeseal:
        name: kubeseal
        repo: bitnami-labs/sealed-secrets
        asset_patterns:
            "*": kubeseal-{{.version}}-{{.os}}-{{.arch}}.tar.gz

    reg:
        name: reg

        repo: genuinetools/reg
        asset_patterns:
            darwin-amd64: reg-darwin-amd64
            darwin-arm64: reg-darwin-arm64
            linux-amd64: reg-linux-amd64
            linux-arm64: reg-linux-arm64
            windows-amd64: reg-windows-amd64.exe
    yq:
        name: yq

        repo: mikefarah/yq
        asset_patterns:
            darwin-amd64: yq_darwin_amd64
            darwin-arm64: yq_darwin_arm64
            linux-amd64: yq_linux_amd64
            linux-arm64: yq_linux_arm64
            windows-amd64: yq_windows_amd64.exe
        version_command: --version
        version_pattern: yq\s+.*version\s+v?(\d+\.\d+\.\d+)
        checksum_file: checksums,checksums_hashes_order
        checksum_expr: |
            'md5:' + checksums.split('\n').filter(line, line.startsWith(filename + ' '))[0].replace('  ', ' ').split(' ')[
                checksums_hashes_order.split('\n').indexOf('SHA-256') + 1
            ]
    svu:
        name: svu
        repo: caarlos0/svu
        asset_patterns:
            darwin-amd64: svu_{{.version}}_darwin_all.tar.gz
            darwin-arm64: svu_{{.version}}_darwin_all.tar.gz
            linux-amd64: svu_{{.version}}_linux_amd64.tar.gz
            linux-arm64: svu_{{.version}}_linux_arm64.tar.gz
        version_command: --version
        version_pattern: svu\s+version\s+v?(\d+\.\d+\.\d+)
    canary-checker:
        name: canary-checker

        repo: flanksource/canary-checker
        asset_patterns:
            darwin-amd64: canary-checker_darwin_amd64
            darwin-arm64: canary-checker_darwin_arm64
            linux-amd64: canary-checker_linux_amd64
            linux-arm64: canary-checker_linux_arm64
            windows-amd64: canary-checker_windows_amd64.exe
    eksctl:
        name: eksctl

        repo: weaveworks/eksctl
        asset_patterns:
            darwin-amd64: eksctl_Darwin_amd64.tar.gz
            darwin-arm64: eksctl_Darwin_arm64.tar.gz
            linux-amd64: eksctl_Linux_amd64.tar.gz
            linux-arm64: eksctl_Linux_arm64.tar.gz
            windows-amd64: eksctl_Windows_amd64.tar.gz
    trivy:
        name: trivy

        repo: aquasecurity/trivy
        checksum_file: trivy_{{.version}}_checksums.txt
        url_template: https://get.trivy.dev/trivy?type=tar.gz&version={{.version}}&os={{.os}}&arch={{.arch}}
        version_command: version
        version_pattern: .*Version:\s+v?(\d+\.\d+\.\d+)
    postgrest:
        name: postgrest

        repo: PostgREST/postgrest
        asset_patterns:
            darwin-amd64: postgrest-{{.tag}}-macos-x86-64.tar.xz
            darwin-arm64: postgrest-{{.tag}}-macos-aarch64.tar.xz
            linux-amd64: postgrest-{{.tag}}-linux-static-x86-64.tar.xz
            linux-arm64: postgrest-{{.tag}}-ubuntu-aarch64.tar.xz
            windows-amd64: postgrest-{{.tag}}-windows-x86-64.zip
        version_command: --help
        version_pattern: .*PostgREST\s+v?(\d+\.\d+\.\d+)
    wal-g:
        name: wal-g

        repo: wal-g/wal-g
        asset_patterns:
            linux-amd64: wal-g-pg-ubuntu-20.04-amd64.tar.gz
            linux-arm64: wal-g-pg-ubuntu-20.04-aarch64.tar.gz
        version_command: --version
        version_pattern: wal-g\s+version\s+v?(\d+\.\d+\.\d+)

    terraform:
        repo: hashicorp/terraform
        url_template: https://releases.hashicorp.com/terraform/{{.version}}/terraform_{{.version}}_{{.os}}_{{.arch}}.zip
        checksum_file: https://releases.hashicorp.com/terraform/{{.version}}/terraform_{{.version}}_SHA256SUMS
        version_command: version
        version_pattern: Terraform\s+v?(\d+\.\d+\.\d+)
    # go-getter:
    #     name: go-getter
    #     manager: direct
    # url_template: https://github.com/hashicorp/go-getter/releases/download/v{{.version}}/go-getter_{{.version}}_{{.os}}_{{.arch}}.zip
    expenv:
        name: expenv

        repo: TheWolfNL/expenv
        asset_patterns:
            darwin-amd64: expenv_darwin_amd64
            darwin-arm64: expenv_darwin_arm64
            linux-amd64: expenv_linux_amd64
            linux-arm64: expenv_linux_arm64
            windows-amd64: expenv_windows_amd64.exe
    packer:
        repo: hashicorp/packer
        url_template: https://releases.hashicorp.com/packer/{{.version}}/packer_{{.version}}_{{.os}}_{{.arch}}.zip
        checksum_file: https://releases.hashicorp.com/packer/{{.version}}/packer_{{.version}}_SHA256SUMS
        version_command: version
        version_pattern: Packer\s+v?(\d+\.\d+\.\d+)
    aws-iam-authenticator:
        name: aws-iam-authenticator
        repo: kubernetes-sigs/aws-iam-authenticator
        asset_patterns:
            darwin-amd64: aws-iam-authenticator_{{.version}}_darwin_amd64
            darwin-arm64: aws-iam-authenticator_{{.version}}_darwin_arm64
            linux-amd64: aws-iam-authenticator_{{.version}}_linux_amd64
            linux-arm64: aws-iam-authenticator_{{.version}}_linux_arm64
            windows-amd64: aws-iam-authenticator_{{.version}}_windows_amd64.exe
        checksum_file: authenticator_{{.version}}_checksums.txt
    etcd:
        name: etcd
        repo: etcd-io/etcd
        asset_patterns:
            darwin-amd64: etcd-{{.tag}}-darwin-amd64.zip
            darwin-arm64: etcd-{{.tag}}-darwin-arm64.zip
            linux-amd64: etcd-{{.tag}}-linux-amd64.tar.gz
            linux-arm64: etcd-{{.tag}}-linux-arm64.tar.gz
            windows-amd64: etcd-{{.tag}}-windows-amd64.zip
        version_command: --version
        version_pattern: etcd\s+Version:\s+(\d+\.\d+\.\d+)
    envtest:
        name: envtest
        repo: kubernetes-sigs/controller-tools
        asset_patterns:
            "*": "{{.tag}}-{{.os}}-{{.arch}}.tar.gz"
        checksum_file: "{{.asset}}.sha512"
        binary_path: envtest

    kube-apiserver:
        name: kube-apiserver
        repo: kubernetes/kubernetes
        url_template: https://dl.k8s.io/{{.tag}}/bin/{{.os}}/{{.arch}}/kube-apiserver
        asset_patterns:
            "linux-*": "kube-apiserver"
            "darwin-*,windows-*": "https://github.com/kubernetes-sigs/controller-tools/releases/download/envtest-{{.tag}}/envtest-{{.tag}}-{{.os}}-{{.arch}}.tar.gz"
        binary_path: |
            os in ["darwin", "windows"] ? "controller-tools/envtest/kube-apiserver" : ""
        checksum_file: |
            os == "linux" ? "{{.asset}}.sha256" : "https://raw.githubusercontent.com/kubernetes-sigs/controller-tools/master/envtest-releases.yaml"
        version_command: --version
        version_pattern: GitVersion:"v(\d+\.\d+\.\d+)"
    gojsontoyaml:
        name: gojsontoyaml

        repo: hongkailiu/gojsontoyaml
        asset_patterns:
            linux-amd64: gojsontoyaml
    actions-runner:
        name: actions-runner
        repo: actions/runner
        asset_patterns:
            darwin-amd64: actions-runner-osx-x64-{{.version}}.tar.gz
            darwin-arm64: actions-runner-osx-arm64-{{.version}}.tar.gz
            linux-amd64: actions-runner-linux-x64-{{.version}}.tar.gz
            linux-arm64: actions-runner-linux-arm64-{{.version}}.tar.gz

    caddy:
        name: caddy
        repo: caddyserver/caddy
        asset_patterns:
            darwin-amd64: caddy_{{.version}}_mac_amd64.tar.gz
            darwin-arm64: caddy_{{.version}}_mac_arm64.tar.gz
            linux-amd64: caddy_{{.version}}_linux_amd64.tar.gz
            linux-arm64: caddy_{{.version}}_linux_arm64.tar.gz
            windows-amd64: caddy_{{.version}}_windows_amd64.zip
        version_command: version
        version_pattern: v(\d+\.\d+\.\d+)
    cni:
        name: cni
        repo: containernetworking/plugins
        asset_patterns:
            darwin-amd64: cni-plugins-darwin-amd64-{{.tag}}.tgz
            darwin-arm64: cni-plugins-darwin-arm64-{{.tag}}.tgz
            linux-amd64: cni-plugins-linux-amd64-{{.tag}}.tgz
            linux-arm64: cni-plugins-linux-arm64-{{.tag}}.tgz
            windows-amd64: cni-plugins-windows-amd64-{{.tag}}.tgz
    containerd:
        name: containerd
        repo: containerd/containerd
        asset_patterns:
            darwin-amd64: containerd-{{.version}}-darwin-amd64.tar.gz
            darwin-arm64: containerd-{{.version}}-darwin-arm64.tar.gz
            linux-amd64: containerd-{{.version}}-linux-amd64.tar.gz
            linux-arm64: containerd-{{.version}}-linux-arm64.tar.gz
        version_command: --version
        version_pattern: containerd\s+v?(\d+\.\d+\.\d+)
    firecracker:
        name: firecracker
        repo: firecracker-microvm/firecracker
        asset_patterns:
            linux-amd64: firecracker-{{.tag}}-x86_64.tgz
            linux-arm64: firecracker-{{.tag}}-aarch64.tgz
    node_exporter:
        name: node_exporter
        repo: prometheus/node_exporter
        asset_patterns:
            darwin-amd64: node_exporter-{{.version}}.darwin-amd64.tar.gz
            darwin-arm64: node_exporter-{{.version}}.darwin-arm64.tar.gz
            linux-amd64: node_exporter-{{.version}}.linux-amd64.tar.gz
            linux-arm64: node_exporter-{{.version}}.linux-arm64.tar.gz
        version_command: --version
        version_pattern: node_exporter.*version\s+(\d+\.\d+\.\d+)

    # Apache Archives packages
    maven-apache:
        name: maven
        manager: apache
        asset_patterns:
            "*": "apache-maven-{{.version}}-bin.tar.gz"
        checksum_file: "apache-maven-{{.version}}-bin.tar.gz.sha256"
        version_command: "--version"
        version_pattern: "Apache Maven (\\d+\\.\\d+\\.\\d+)"
        binary_path: "apache-maven-{{.version}}/bin/mvn"

    ant:
        name: ant
        manager: apache
        mode: directory
        asset_patterns:
            "*": "apache-ant-{{.version}}-bin.tar.gz"
        checksum_file: "apache-ant-{{.version}}-bin.tar.gz.sha512"
        version_command: bin/ant -version
        symlinks:
            - bin/ant
        version_pattern: "Apache Ant\\(TM\\) version (\\d+\\.\\d+\\.\\d+)"

    prometheus:
        name: prometheus
        repo: prometheus/prometheus
        checksum_file: sha256sums.txt
        asset_patterns:
            "*": prometheus-{{.version}}.{{.os}}-{{.arch}}.tar.gz
        version_command: --version
        version_pattern: prometheus.*version\s+(\d+\.\d+\.\d+)
    registry:
        name: registry
        repo: distribution/distribution
        asset_patterns:
            darwin-amd64: registry_{{.version}}_darwin_amd64.tar.gz
            darwin-arm64: registry_{{.version}}_darwin_arm64.tar.gz
            linux-amd64: registry_{{.version}}_linux_amd64.tar.gz
            linux-arm64: registry_{{.version}}_linux_arm64.tar.gz
    gitlab-runner:
        name: gitlab-runner
        manager: gitlab
        repo: gitlab-org/gitlab-runner
        asset_patterns:
            darwin-amd64: "binary: macOS amd64"
            darwin-arm64: "binary: macOS arm64"
            linux-amd64: "binary: Linux amd64"
            linux-arm64: "binary: Linux arm"
            windows-amd64: "binary: Windows amd64"
        version_command: --version
        version_pattern: gitlab-runner\s+(\d+\.\d+\.\d+)
        checksum_file: release.sha256
    kubebuilder:
        name: kubebuilder
        repo: kubernetes-sigs/kubebuilder
        checksum_file: checksums.txt
        asset_patterns:
            darwin-amd64: kubebuilder_darwin_amd64
            darwin-arm64: kubebuilder_darwin_arm64
            linux-amd64: kubebuilder_linux_amd64
            linux-arm64: kubebuilder_linux_arm64
            linux-ppc64le: kubebuilder_linux_ppc64le
            linux-s390x: kubebuilder_linux_s390x
        version_command: version
        version_pattern: Version:\s*v?(\d+\.\d+\.\d+)

    # System-level development tools
    node:
        name: node
        repo: nodejs/node
        mode: directory
        url_template: https://nodejs.org/download/release/{{.tag}}/{{.asset}}
        asset_patterns:
            darwin-amd64: node-{{.tag}}-darwin-x64.tar.gz
            darwin-arm64: node-{{.tag}}-darwin-arm64.tar.gz
            linux-amd64: node-{{.tag}}-linux-x64.tar.gz
            linux-arm64: node-{{.tag}}-linux-arm64.tar.gz
        version_command: bin/node --version
        version_pattern: v(\d+\.\d+\.\d+)
        symlinks:
            - bin/node
            - bin/npm
            - bin/npx

    go:
        name: go
        repo: golang/go
        manager: github_tags
        mode: directory
        url_template: https://go.dev/dl/go{{.version}}.{{.os}}-{{.arch}}.tar.gz
        asset_patterns:
            darwin-amd64: go{{.version}}.darwin-amd64.tar.gz
            darwin-arm64: go{{.version}}.darwin-arm64.tar.gz
            linux-amd64: go{{.version}}.linux-amd64.tar.gz
            linux-arm64: go{{.version}}.linux-arm64.tar.gz
        version_command: bin/go version
        version_pattern: go version go(\d+\.\d+\.\d+)
        version_expr: 'tag.startsWith("go") ? tag.substring(2) : tag'

    powershell:
        name: pwsh
        repo: PowerShell/PowerShell
        mode: directory
        asset_patterns:
            darwin-amd64: powershell-{{.version}}-osx-x64.tar.gz
            darwin-arm64: powershell-{{.version}}-osx-arm64.tar.gz
            linux-amd64: powershell-{{.version}}-linux-x64.tar.gz
            linux-arm64: powershell-{{.version}}-linux-arm64.tar.gz
        version_command: ./pwsh --version
        version_pattern: PowerShell (\S+)
        post_process:
            - chmod("pwsh", "0755")
        symlinks:
            - pwsh

    task:
        name: task
        repo: go-task/task
        asset_patterns:
            darwin-amd64: task_darwin_amd64.tar.gz
            darwin-arm64: task_darwin_arm64.tar.gz
            linux-amd64: task_linux_amd64.tar.gz
            linux-arm64: task_linux_arm64.tar.gz
            windows-amd64: task_windows_amd64.zip
        checksum_file: task_checksums.txt
        version_command: --version
        version_pattern: 'Task version:\s+v?(\d+\.\d+\.\d+)'

    azure-cli:
        repo: Azure/azure-cli
        asset_patterns:
            "*": azure-cli-{{.version}}-x64.zip
        version_command: --version
        version_pattern: 'azure-cli\s+(\d+\.\d+\.\d+)'
        version_expr: 'tag.startsWith("azure-cli-") ? tag.substring(10) : tag'

    aws-cli:
        name: aws
        repo: aws/aws-cli
        manager: github_tags
        url_template: https://awscli.amazonaws.com/{{.asset}}
        asset_patterns:
            darwin-*: AWSCLIV2-{{.tag}}.pkg
            linux-amd64: awscli-exe-linux-x86_64-{{.tag}}.zip
            linux-arm64: awscli-exe-linux-aarch64-{{.tag}}.zip
            windows-amd64: AWSCLIV2-{{.tag}}.msi
        version_command: --version
        version_pattern: 'aws-cli/(\d+\.\d+\.\d+)'

    gcloud-cli:
        name: gcloud
        manager: direct
        mode: directory
        url_template: https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-{{.version}}-{{.os}}-{{.arch}}.tar.gz
        asset_patterns:
            darwin-amd64: google-cloud-cli-{{.version}}-darwin-x86_64.tar.gz
            darwin-arm64: google-cloud-cli-{{.version}}-darwin-arm.tar.gz
            linux-amd64: google-cloud-cli-{{.version}}-linux-x86_64.tar.gz
            linux-arm64: google-cloud-cli-{{.version}}-linux-arm.tar.gz
            windows-amd64: google-cloud-cli-{{.version}}-windows-x86_64.zip
        version_command: bin/gcloud version --format="value(Google Cloud SDK)"
        version_pattern: '(\d+\.\d+\.\d+)'
        symlinks:
            - bin/gcloud
            - bin/gsutil
            - bin/bq

    python:
        name: python
        repo: python/cpython
        mode: directory
        asset_patterns:
            darwin-amd64: Python-{{.version}}-macOS-universal2.tar.gz
            darwin-arm64: Python-{{.version}}-macOS-universal2.tar.gz
            linux-amd64: Python-{{.version}}.tar.xz
            linux-arm64: Python-{{.version}}.tar.xz
            windows-amd64: python-{{.version}}-amd64.exe
        version_command: python --version
        version_pattern: 'Python (\d+\.\d+\.\d+)'
        symlinks:
            - python
            - pip

    openjdk17:
        name: openjdk
        repo: adoptium/temurin17-binaries
        mode: directory
        asset_patterns:
            darwin-amd64: OpenJDK17U-jdk_x64_mac_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            darwin-arm64: OpenJDK17U-jdk_aarch64_mac_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            linux-amd64: OpenJDK17U-jdk_x64_linux_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            linux-arm64: OpenJDK17U-jdk_aarch64_linux_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
        version_command: java --version
        version_pattern: '([\d.]+\+\d+)'
        symlinks:
            - "darwin-*: Contents/Home/bin/*"
            - "linux-*: bin/*"

    openjdk11:
        name: openjdk
        repo: adoptium/temurin11-binaries
        mode: directory
        asset_patterns:
            darwin-amd64: OpenJDK11U-jdk_x64_mac_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            darwin-arm64: OpenJDK11U-jdk_aarch64_mac_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            linux-amd64: OpenJDK11U-jdk_x64_linux_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            linux-arm64: OpenJDK11U-jdk_aarch64_linux_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
        version_command: java --version
        version_pattern: '([\d.]+\+\d+)'
        symlinks:
            - "darwin-*: Contents/Home/bin/*"
            - "linux-*: bin/*"

    openjdk8:
        name: openjdk
        repo: adoptium/temurin8-binaries
        mode: directory
        asset_patterns:
            darwin-amd64: OpenJDK8U-jdk_x64_mac_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            darwin-arm64: OpenJDK8U-jdk_aarch64_mac_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            linux-amd64: OpenJDK8U-jdk_x64_linux_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            linux-arm64: OpenJDK8U-jdk_aarch64_linux_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
        version_command: java --version
        version_pattern: '([\d.]+\+\d+)'
        symlinks:
            - "darwin-*: Contents/Home/bin/*"
            - "linux-*: bin/*"

    openjdk21:
        name: openjdk
        repo: adoptium/temurin21-binaries
        mode: directory
        asset_patterns:
            darwin-amd64: OpenJDK21U-jdk_x64_mac_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            darwin-arm64: OpenJDK21U-jdk_aarch64_mac_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            linux-amd64: OpenJDK21U-jdk_x64_linux_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            linux-arm64: OpenJDK21U-jdk_aarch64_linux_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
        version_command: java --version
        version_pattern: '([\d.]+\+\d+)'
        symlinks:
            - "darwin-*: Contents/Home/bin/*"
            - "linux-*: bin/*"

    openjre:
        name: openjre
        repo: adoptium/temurin21-binaries
        mode: directory
        asset_patterns:
            darwin-amd64: OpenJDK21U-jre_x64_mac_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            darwin-arm64: OpenJDK21U-jre_aarch64_mac_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            linux-amd64: OpenJDK21U-jre_x64_linux_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
            linux-arm64: OpenJDK21U-jre_aarch64_linux_hotspot_{{.version | replaceAll "+" "_"}}.tar.gz
        version_command: jdk-{{.version}}-jre/bin/java --version
        version_pattern: '([\d.]+\+\d+)'
        symlinks:
            - e/bin/java

    tomee:
        name: tomee
        manager: apache
        mode: directory
        url_template: https://archive.apache.org/dist/tomee/
        asset_patterns:
            "*": tomee-{{.version}}/apache-tomee-{{.version}}-plume.zip
        checksum_file: "{{.asset}}.sha512"
        version_command: bin/version.sh
        version_pattern: 'Server version:\\s+Apache Tomcat/\\S+\\s+Apache TomEE/([\\d\\.]+)'
        symlinks:
            - tomee->bin/catalina.sh
        post_process:
            - delete("webapps/docs/")
            - delete("*.bat")

    activemq:
        name: activemq
        manager: apache
        mode: directory
        url_template: https://archive.apache.org/dist/activemq/{{.version}}/
        asset_patterns:
            "*": apache-activemq-{{.version}}-bin.zip
        checksum_file: "{{.asset}}.sha512"
        version_command: bin/activemq --version
        version_pattern: 'ActiveMQ\\s+(\\d+\\.\\d+\\.\\d+)'
        symlinks:
            - bin/activemq
        post_process:
            - delete("examples/")
            - delete("docs/")
            - delete("webapps-demo/")
            - '!windows-*: delete("bin/win32/")'
            - '!windows-*: delete("bin/win64/")'
            - delete("*.bat")

    activemq-artemis:
        name: activemq-artemis
        manager: apache
        mode: directory
        asset_patterns:
            "*": apache-artemis-{{.version}}-bin.tar.gz
        checksum_file: apache-artemis-{{.version}}-bin.tar.gz.sha512
        version_command: bin/artemis version
        version_pattern: 'ActiveMQ Artemis\\s+(\\d+\\.\\d+\\.\\d+)'
        symlinks:
            - bin/artemis

    arthas:
        name: arthas
        repo: alibaba/arthas
        mode: directory
        asset_patterns:
            "*": arthas-bin.zip
        version_command: cat VERSION
        version_pattern: '(\\d+\\.\\d+\\.\\d+)'
        symlinks:
            - as.sh->arthas

    xmlstarlet:
        name: xmlstarlet
        manager: direct
        url_template: https://sourceforge.net/projects/xmlstar/files/xmlstarlet/{{.version}}/xmlstarlet-{{.version}}.tar.gz/download
        asset_patterns:
            "*": xmlstarlet-{{.version}}.tar.gz
        version_command: --version
        version_pattern: 'compiled against libxml2 (\d+\.\d+\.\d+)'

settings:
    bin_dir: ./bin
    platform:
        os: darwin
        arch: arm64
    parallel: true
