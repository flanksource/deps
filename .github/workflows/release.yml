name: Release

on:
  push:
    branches: [main, master]

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write
  id-token: write

env:
  GO_VERSION: "1.25"

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
      new_release_major_version: ${{ steps.semantic.outputs.new_release_major_version }}
      new_release_minor_version: ${{ steps.semantic.outputs.new_release_minor_version }}
      new_release_patch_version: ${{ steps.semantic.outputs.new_release_patch_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install semantic-release
        run: |
          npm install -g semantic-release@23 \
            @semantic-release/git@10 \
            @semantic-release/github@10 \
            @semantic-release/changelog@6 \
            @semantic-release/exec@6 \
            conventional-changelog-conventionalcommits@7

      - name: Semantic Release

        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Running semantic-release with enhanced patch rules..."
          echo "Last tag: ${{ steps.changes.outputs.last_tag }}"
          echo "Commits since last release: ${{ steps.changes.outputs.commits_since_last }}"
          npx semantic-release

      - name: Release Summary
        run: |
          echo "=== Release Summary ==="
          echo "New release published: ${{ steps.semantic.outputs}}"
          echo "New version: v${{ steps.semantic.outputs.new_release_version }}"
          echo "Release type: ${{ steps.semantic.outputs.new_release_major_version != '' && 'major' || (steps.semantic.outputs.new_release_minor_version != '' && 'minor' || 'patch') }}"
          echo "GitHub release will be created by GoReleaser"


          # Show recent commits for debugging
          echo ""
          echo "Recent commits: $(git describe --tags --abbrev=0)"
          git log --oneline -5
  goreleaser:
    name: GoReleaser
    needs: semantic-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch tags
        run: git fetch --force --tags

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install dependencies
        run: make build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
          SCOOP_BUCKET_GITHUB_TOKEN: ${{ secrets.SCOOP_BUCKET_GITHUB_TOKEN }}
          GITHUB_OWNER: ${{ github.repository_owner }}

  announce:
    name: Announce Release
    needs: [semantic-release, goreleaser]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create release announcement
        env:
          VERSION: v${{ needs.semantic-release.outputs.new_release_version }}
        run: |
          echo "ðŸš€ Clicky $VERSION has been released!" > announcement.txt
          echo "" >> announcement.txt
          echo "## Installation" >> announcement.txt
          echo "" >> announcement.txt
          echo "### Using Go:" >> announcement.txt
          echo "\`\`\`bash" >> announcement.txt
          echo "go install github.com/${{ github.repository }}/cmd/clicky@$VERSION" >> announcement.txt
          echo "\`\`\`" >> announcement.txt
          echo "" >> announcement.txt
          echo "### Using Homebrew (macOS/Linux):" >> announcement.txt
          echo "\`\`\`bash" >> announcement.txt
          echo "brew install ${{ github.repository_owner }}/tap/clicky" >> announcement.txt
          echo "\`\`\`" >> announcement.txt
          echo "" >> announcement.txt
          echo "### Using Docker:" >> announcement.txt
          echo "\`\`\`bash" >> announcement.txt
          echo "docker pull ghcr.io/${{ github.repository }}:$VERSION" >> announcement.txt
          echo "\`\`\`" >> announcement.txt
          echo "" >> announcement.txt
          echo "See the full changelog at: https://github.com/${{ github.repository }}/releases/tag/$VERSION" >> announcement.txt
          cat announcement.txt
