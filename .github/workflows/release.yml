name: Release

on:
  push:
    branches: [main, master]

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write
  id-token: write

env:
  GO_VERSION: "1.25"

jobs:
  version:
    name: Determine Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.svu.outputs.version }}
      tag: ${{ steps.svu.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install svu
        run: |
          curl -sL https://github.com/caarlos0/svu/releases/download/v2.2.0/svu_2.2.0_linux_amd64.tar.gz | tar xz
          sudo mv svu /usr/local/bin/

      - name: Get next version
        id: svu
        run: |
          NEXT_VERSION=$(svu patch)
          echo "version=${NEXT_VERSION#v}" >> $GITHUB_OUTPUT
          echo "tag=$NEXT_VERSION" >> $GITHUB_OUTPUT
          echo "Next version: $NEXT_VERSION"

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.svu.outputs.tag }}
          git push origin ${{ steps.svu.outputs.tag }}
  build:
    name: Build
    needs: version
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
          VERSION: ${{ needs.version.outputs.version }}
          BINARY_NAME: "deps-${{ matrix.goos }}-${{ matrix.goarch }}"
        run: |

          if [ "$GOOS" = "windows" ]; then
            BINARY_NAME="$BINARY_NAME.exe"
          fi

          go build -ldflags="-s -w -X main.version=$VERSION -X main.commit=${{ github.sha }} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
            -o "$BINARY_NAME" ./cmd/deps/main.go


          sha256sum "$BINARY_NAME" > "$BINARY_NAME".sha256

      - name: Create archive
        env:
          BINARY_NAME: "deps-${{ matrix.goos }}-${{ matrix.goarch }}"
        run: |
          if [ "$GOOS" = "windows" ]; then
            mv $BINARY_NAME.exe deps.exe
            zip "${BINARY_NAME}.zip" deps.exe
            sha256sum  "${BINARY_NAME}.zip" >  "${BINARY_NAME}.sha256"
          else
            mv $BINARY_NAME deps
            tar czf "${BINARY_NAME}.tar.gz" deps
            sha256sum  "${BINARY_NAME}.tar.gz" >  "${BINARY_NAME}.tar.gz.sha256"
          fi

      - name: Upload bare to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: deps-*
          tag: ${{ needs.version.outputs.version }}
